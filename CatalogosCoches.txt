
public interface LandRoverInterface {
   
    CocheDieselAbstracto CreaCocheDiesel(String marca, String modelo, float cilindrada, int potencia);
    CocheGasolinaAbstracto CreaCocheGasolina(String marca, String modelo, float cilindrada, int potencia);
}

public  class FabricaLandRover implements LandRoverInterface{

    @Override
    public CocheDieselAbstracto CreaCocheDiesel(String marca, String modelo, float cilindrada, int potencia) {
        return new CocheDiesel(marca, modelo,cilindrada,potencia) {};
        }

    @Override
    public CocheGasolinaAbstracto CreaCocheGasolina(String marca, String modelo, float cilindrada, int potencia) {
        return new CocheGasolina(marca,modelo,cilindrada,potencia){};
    }
    
}

public interface VWInterface {
    
    CocheElectricoAbstracto CreaCocheElectrico(String marca, String modelo, float cilindrada, int potencia);
    CocheDieselAbstracto CreaCocheDiesel(String marca, String modelo, float cilindrada, int potencia);
    CocheGasolinaAbstracto CreaCocheGasolina(String marca, String modelo, float cilindrada, int potencia);
    CocheHibridoAbstracto CreaCocheHibrido(String marca, String modelo, float cilindrada, int potencia);
    
}

public  class FabricaVW implements VWInterface{
  
    @Override
    public CocheElectricoAbstracto CreaCocheElectrico(String marca, String modelo, float cilindrada , int potencia) {
        return new CocheElectrico(marca, modelo,cilindrada, potencia){};
    }

    @Override
    public CocheDieselAbstracto CreaCocheDiesel(String marca, String modelo, float cilindrada, int potencia) {
        return new CocheDiesel(marca, modelo,cilindrada,potencia) {};
    }

    @Override
    public CocheGasolinaAbstracto CreaCocheGasolina(String marca, String modelo, float cilindrada, int potencia) {
        return new CocheGasolina(marca,modelo,cilindrada,potencia){};
    }

    @Override
    public CocheHibridoAbstracto CreaCocheHibrido(String marca, String modelo, float cilindrada, int potencia) {
       return new CocheHibrido(marca, modelo, cilindrada, potencia){};
    }
    
}

public interface TeslaInterface {
    
    CocheElectricoAbstracto CreaCocheElectrico(String marca, String modelo, float cilindrada, int potencia);
}

public class FabricaTesla implements TeslaInterface{
    
    @Override
    public CocheElectricoAbstracto CreaCocheElectrico(String marca, String modelo, float cilindrada, int potencia) {
        return new CocheElectrico(marca, modelo,cilindrada, potencia){};
    }

}


public abstract class CocheDieselAbstracto implements CochePrototype{
    protected String marca;
    protected String modelo;
    protected float cilindrada;
    protected int potencia;
    
    
    public CocheDieselAbstracto(String marca, String modelo, float cilindrada, int potencia){
        this.marca=marca;
        this.modelo=modelo;
        this.cilindrada=cilindrada;
        this.potencia=potencia;
        
    }
    @Override
    public String getMarca(){
        return marca;
    }
    
    @Override
    public void setMarca(String marc){ 
        marca=marc;
    }
    @Override
    public String getModelo(){
        return modelo;
    }
    
    @Override
    public void setModelo(String mod){ 
       modelo=mod;
    }
    
    @Override
    public float getCilindrada(){
        return cilindrada;
    }
    
    @Override
    public void setCilindrada(float cc){ 
       cilindrada=cc;
    }
    @Override
    public int getPotencia(){
        return potencia;
    }
    
    @Override
    public void setPotencia(int hp){ 
       potencia=hp;
    }
    
    @Override
    public void mostrarCaracteristicas(){}

    
}


public  class CocheDiesel extends CocheDieselAbstracto {
    
    public CocheDiesel(String marca, String modelo, float cilindrada, int potencia) {
        super(marca, modelo, cilindrada, potencia);
    }
    
    @Override
    public void mostrarCaracteristicas(){
        System.out.println("La marca es : "+marca+" , el modelo es: "+modelo+" , la cilindrada del motor es: "+cilindrada+" ,con una potencia de "+potencia+" C.V. ");
    }
    
    @Override
    public CochePrototype clonar() {
        CochePrototype prototipo= new CocheDiesel(marca, modelo,cilindrada,potencia);
        prototipo.setMarca(marca);
        prototipo.setModelo(modelo);
        prototipo.setCilindrada(cilindrada);
        prototipo.setPotencia(potencia);
        return prototipo;
    }

    
}


public abstract class CocheElectricoAbstracto implements CochePrototype{
    protected String marca;
    protected String modelo;
    protected float cilindrada;
    protected int potencia;
    
    
    public CocheElectricoAbstracto(String marca, String modelo,float cilindrada, int potencia){
        this.marca=marca;
        this.modelo=modelo;
        this.cilindrada=cilindrada;
        this.potencia=potencia;
        
    }
    
    @Override
    public void mostrarCaracteristicas(){}
    
    @Override
    public String getMarca(){
        return marca;
    }
    
    @Override
    public void setMarca(String marc){ 
        marca=marc;
    }
    @Override
    public String getModelo(){
        return modelo;
    }
    
    @Override
    public void setModelo(String mod){ 
       modelo=mod;
    }
    
    @Override
    public float getCilindrada(){
        return cilindrada;
    }
    
    @Override
    public void setCilindrada(float cc){ 
       cilindrada=cc;
    }
    @Override
    public int getPotencia(){
        return potencia;
    }
    
    @Override
    public void setPotencia(int hp){ 
       potencia=hp;
    }
    
}


public class CocheElectrico extends CocheElectricoAbstracto {
    
    public CocheElectrico(String marca, String modelo, float cilindrada, int potencia) {
        super(marca, modelo,cilindrada, potencia);
    }
    @Override
    public void mostrarCaracteristicas(){
        System.out.println("La marca es : "+marca+" , el modelo es: "+modelo+" ,con una potencia de "+potencia+" C.V. ");
    }   
    
    @Override
    public CochePrototype clonar() {
        CochePrototype prototipo= new CocheElectrico(marca, modelo,cilindrada,potencia);
        prototipo.setMarca(marca);
        prototipo.setModelo(modelo);
        prototipo.setCilindrada(cilindrada);
        prototipo.setPotencia(potencia);
        return prototipo;
    }
}


public abstract class CocheGasolinaAbstracto implements CochePrototype{
    protected String marca;
    protected String modelo;
    protected float cilindrada;
    protected int potencia;
    
    
    public CocheGasolinaAbstracto(String marca, String modelo, float cilindrada, int potencia){
        this.marca=marca;
        this.modelo=modelo;
        this.cilindrada=cilindrada;
        this.potencia=potencia;
        
    }
    
    @Override
    public void mostrarCaracteristicas(){}
    
    @Override
    public String getMarca(){
        return marca;
    }
    
    @Override
    public void setMarca(String marc){ 
        marca=marc;
    }
    @Override
    public String getModelo(){
        return modelo;
    }
    
    @Override
    public void setModelo(String mod){ 
       modelo=mod;
    }
    
    @Override
    public float getCilindrada(){
        return cilindrada;
    }
    
    @Override
    public void setCilindrada(float cc){ 
       cilindrada=cc;
    }
    @Override
    public int getPotencia(){
        return potencia;
    }
    
    @Override
    public void setPotencia(int hp){ 
       potencia=hp;
    }
    
    
}


public class CocheGasolina extends CocheGasolinaAbstracto{
    
    public CocheGasolina(String marca, String modelo, float cilindrada, int potencia) {
        super(marca, modelo, cilindrada, potencia);
    }
    @Override
    public void mostrarCaracteristicas(){
        System.out.println("La marca es : "+marca+" , el modelo es: "+modelo+" , la cilindrada del motor es: "+cilindrada+" ,con una potencia de "+potencia+" C.V. ");
    }
    
    @Override
    public CochePrototype clonar() {
        CochePrototype prototipo= new CocheGasolina(marca, modelo,cilindrada,potencia);
        prototipo.setMarca(marca);
        prototipo.setModelo(modelo);
        prototipo.setCilindrada(cilindrada);
        prototipo.setPotencia(potencia);
        return prototipo;
    }
}


public abstract class CocheHibridoAbstracto implements CochePrototype{
    protected String marca;
    protected String modelo;
    protected float cilindrada;
    protected int potencia;
    
    
    public CocheHibridoAbstracto(String marca, String modelo, float cilindrada, int potencia){
        this.marca=marca;
        this.modelo=modelo;
        this.cilindrada=cilindrada;
        this.potencia=potencia;
        
    }
    
    @Override
    public void mostrarCaracteristicas(){}
    
    @Override
    public String getMarca(){
        return marca;
    }
    
    @Override
    public void setMarca(String marc){ 
        marca=marc;
    }
    @Override
    public String getModelo(){
        return modelo;
    }
    
    @Override
    public void setModelo(String mod){ 
       modelo=mod;
    }
    
    @Override
    public float getCilindrada(){
        return cilindrada;
    }
    
    @Override
    public void setCilindrada(float cc){ 
       cilindrada=cc;
    }
    @Override
    public int getPotencia(){
        return potencia;
    }
    
    @Override
    public void setPotencia(int hp){ 
       potencia=hp;
    }
    
}


public  class CocheHibrido extends CocheHibridoAbstracto{
    
    public CocheHibrido(String marca, String modelo, float cilindrada, int potencia) {
        super(marca, modelo, cilindrada, potencia);
    }
    @Override
    public void mostrarCaracteristicas(){
        System.out.println("La marca es : "+marca+" , el modelo es: "+modelo+" , la cilindrada del motor es: "+cilindrada+" ,con una potencia de "+potencia+" C.V. ");
    }
    
    @Override
    public CochePrototype clonar() {
        CochePrototype prototipo= new CocheHibrido(marca, modelo,cilindrada,potencia);
        prototipo.setMarca(marca);
        prototipo.setModelo(modelo);
        prototipo.setCilindrada(cilindrada);
        prototipo.setPotencia(potencia);
        return prototipo;
    }
}


interface CochePrototype {
    public String getMarca();
    public void setMarca(String marca);
    public String getModelo();
    public void setModelo(String modelo);
    public float getCilindrada();
    public void setCilindrada(float cc);
    public int getPotencia();
    public void setPotencia(int hp);
    
    public CochePrototype clonar();
    public void mostrarCaracteristicas();
}

import java.util.ArrayList;
import java.util.List;

class Catalogo {
    private final List<CochePrototype> coches;

    public Catalogo() {
        this.coches = new ArrayList<>();
    }

    public void agregarCoche(CochePrototype coche) {
        this.coches.add(coche);
    }

    public void eliminarCoche(CochePrototype coche) {
        this.coches.remove(coche);
    }

    public List<CochePrototype> getCoches() {
        return coches;
    }
}
